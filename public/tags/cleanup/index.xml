<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cleanup on wiki.ght1pc9kc.fr</title>
    <link>/tags/cleanup.html</link>
    <description>Recent content in Cleanup on wiki.ght1pc9kc.fr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    
	<atom:link href="/tags/cleanup/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Effacer définitivement un disque dur</title>
      <link>/linux/shell/effacer-definitivement-un-disque-dur.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/shell/effacer-definitivement-un-disque-dur.html</guid>
      <description>L&amp;rsquo;objectif est de supprimer les données d&amp;rsquo;un disque dur de façon définitive pour se protéger d&amp;rsquo;une reconstruction de la table d&amp;rsquo;index
L’utilitaire « dd » fourni avec tous les *nix et dérivés, permet de faire de nombreuses manipulations sur des fichiers ou des systèmes de fichiers comme (liste non exhaustive): Formatter une disquette à partir d’une image, découper un fichier en plusieurs morceaux, faire une image d’un DVD ou encore — et c’est ce qui nous intéresse ici — détruire les données d’un disque dur en le remplissant de zéros ou de données aléatoires.</description>
    </item>
    
    <item>
      <title>Nettoyer les fichiers de configuration</title>
      <link>/linux/administration/nettoyer-les-fichiers-de-configuration.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/administration/nettoyer-les-fichiers-de-configuration.html</guid>
      <description>Au fil des mises à jours d&amp;rsquo;une Debian, il arrive que des fichiers de configuration ne soient pas bien nettoyé. Il est parfois difficile dans les deb de supprimer des fichiers. Voilà comment trouver ces fichiers obsolète et les supprimer.
Procédure standard dpkg-query -W -f=&amp;#39;${Conffiles}\n&amp;#39; | grep &amp;#39;obsolete$&amp;#39; /etc/apparmor.d/abstractions/evince ae2a1e8cf5a7577239e89435a6ceb469 obsolete /etc/apparmor.d/tunables/ntpd 5519e4c01535818cb26f2ef9e527f191 obsolete /etc/apparmor.d/usr.bin.evince 08a12a7e468e1a70a86555e0070a7167 obsolete /etc/apparmor.d/usr.sbin.ntpd a00aa055d1a5feff414bacc89b8c9f6e obsolete /etc/bash_completion.d/initramfs-tools 7eeb7184772f3658e7cf446945c096b1 obsolete /etc/bash_completion.d/insserv 32975fe14795d6fce1408d5fd22747fd obsolete /etc/dbus-1/system.d/com.redhat.NewPrinterNotification.conf 8df3896101328880517f530c11fff877 obsolete /etc/dbus-1/system.</description>
    </item>
    
    <item>
      <title>Nettoyer sa Debian</title>
      <link>/linux/administration/nettoyer-sa-debian.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/administration/nettoyer-sa-debian.html</guid>
      <description>Même si ce n&amp;rsquo;est pas dans les proportion de Windows, un Linux a tendance à accumuler des reliquats de vieux paquets et du cache pas vraiment utile qui à la longue pèsent lourd sur l&amp;rsquo;espace disque (ça ne ralenti pas le système pour autant).
Localepurge C&amp;rsquo;est la première chose à faire, &amp;ldquo;localepurge&amp;rdquo; est un outil qui à chaque install de paquet ou de mise à jour, va faire le ménage dans les langues installé.</description>
    </item>
    
    <item>
      <title>Remove ophans from docker registry</title>
      <link>/outils/docker/remove-ophans-from-docker-registry.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/remove-ophans-from-docker-registry.html</guid>
      <description>Il est compliqué de nettoyer un registry Docker (avant sa version 2.0 en tout cas). Voici un script qui supprime les images orpheline dans le registry.
#!/bin/bash  JQPATH=$(which jq) if [ &amp;#34;x$JQPATH&amp;#34; == &amp;#34;x&amp;#34; ]; then echo &amp;#34;Couldn&amp;#39;t find jq executable.&amp;#34; 1&amp;gt;&amp;amp;2 exit 2 fi set -eu shopt -s nullglob readonly base_dir=/data/docker_registry_backup/registry/ readonly output_dir=$(mktemp -d -t trace-images-XXXX) readonly jq=$JQPATH readonly repository_dir=$base_dir/repositories readonly image_dir=$base_dir/images readonly all_images=$output_dir/all readonly used_images=$output_dir/used readonly unused_images=$output_dir/unused function info() { echo -e &amp;#34;\nArtifacts available in $output_dir&amp;#34; } trap info EXIT ERR INT function image_history() { local readonly image_hash=$1 $jq &amp;#39;.</description>
    </item>
    
    <item>
      <title>Supprimer les images non taggé</title>
      <link>/outils/docker/supprimer-les-images-non-tagge.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/supprimer-les-images-non-tagge.html</guid>
      <description>Pour virer toutes les images non taggé :
docker rmi $(docker images | grep &amp;#39;^&amp;lt;none&amp;gt;&amp;#39; | awk &amp;#39;{print $3}&amp;#39;) Attention si l&amp;rsquo;image est utilisé par un conteneur ça marchera pas.
A partir de la 1.3.1 :
docker rmi $(docker images -f &amp;#34;dangling=true&amp;#34; -q)</description>
    </item>
    
    <item>
      <title>Supprimer les vieux conteneurs</title>
      <link>/outils/docker/supprimer-les-vieux-conteneurs.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/supprimer-les-vieux-conteneurs.html</guid>
      <description>Pour supprimer les vieux conteneur de plus d&amp;rsquo;une semaine par exemple :
docker ps -a | grep &amp;#39;weeks ago&amp;#39; | awk &amp;#39;{print $1}&amp;#39; | xargs docker rm -v  Les conteneurs issue d&amp;rsquo;images non taggé :
docker ps -a | awk &amp;#39;$2 ~ &amp;#34;[0-9a-f]{12}&amp;#34; {print $&amp;#34;$1&amp;#34;}&amp;#39; docker ps -a | awk &amp;#39;$2 ~ /^[0-9a-f]+$/ {print $1}&amp;#39; | xargs docker rm -v  Et pour virer tous les conteneurs arrété :</description>
    </item>
    
    <item>
      <title>Supprimer un type de fichier dans une arborescence</title>
      <link>/linux/shell/supprimer-un-type-de-fichier-dans-une-arborescence.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/shell/supprimer-un-type-de-fichier-dans-une-arborescence.html</guid>
      <description>Par exemple les fichiers générés par VSS :
rm $(find . -name *.</description>
    </item>
    
    <item>
      <title>Trouver les gros fichiers</title>
      <link>/linux/shell/trouver-les-gros-fichiers.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/shell/trouver-les-gros-fichiers.html</guid>
      <description>Un ligne de commande bien pratique pour ça :
du -hms /* | sort -nr | head Ca ne donne que le premier niveau de hiérarchie, il faudra relancer la commande pour affiner le recherche par sous-dossier.</description>
    </item>
    
    <item>
      <title>Weekly cleaner</title>
      <link>/outils/docker/weekly-cleaner.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/weekly-cleaner.html</guid>
      <description>A placer dans /etc/cron.weekly/clean-docker + chmod +x ...
docker rm -v $(docker ps -a -q) docker rmi $(docker images | grep &amp;#39;^&amp;lt;none&amp;gt;&amp;#39; | awk &amp;#39;{print $3}&amp;#39;) docker rmi $(docker images | grep &amp;#39;months ago&amp;#39; | awk &amp;#39;{print $3}&amp;#39;) Ca ve supprimer les images vieilles de plusieurs mois et celle non tagés ainsi que les conteneur associés.</description>
    </item>
    
  </channel>
</rss>
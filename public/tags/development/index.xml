<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on wiki.ght1pc9kc.fr</title>
    <link>/tags/development.html</link>
    <description>Recent content in Development on wiki.ght1pc9kc.fr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    
	<atom:link href="/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>(505) HTTP version not supported en .Net</title>
      <link>/development/dotnet/505-http-version-not-supported-en-.net.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/dotnet/505-http-version-not-supported-en-.net.html</guid>
      <description>Lors de l&amp;rsquo;appel d&amp;rsquo;un WS Cameleon depuis .Net on peut tomber sur ce genre de message super explicite ! Pour résoudre le soucis, il faut ajouter les lignes suivante dans le fichier de configuration du WS client :
&amp;lt;system.net&amp;gt; &amp;lt;settings&amp;gt; &amp;lt;servicePointManager expect100Continue=&amp;#34;false&amp;#34;/&amp;gt; &amp;lt;/settings&amp;gt; &amp;lt;/system.net&amp;gt; </description>
    </item>
    
    <item>
      <title>Accès Docker non root</title>
      <link>/outils/docker/acces-docker-non-root.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/acces-docker-non-root.html</guid>
      <description>Normalement tous les accès docker se font en root avec sudo ou autre. Pour utiliser docker en non-root :
sudo usermod -a -G docker netflow</description>
    </item>
    
    <item>
      <title>Accès JNDI de JBoss</title>
      <link>/development/java/acces-jndi-de-jboss.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/acces-jndi-de-jboss.html</guid>
      <description>Pour accéder au composants EJB déployé sous JBoss, voici un exemple de code. Il récupère le ~CorbasManager mais ça marche avec tout les EJB déployé.
// Get initial context of JNDI tree Hashtable&amp;lt;String, String&amp;gt; w_param = new Hashtable&amp;lt;String, String&amp;gt;(); w_param.put(javax.naming.Context.INITIAL_CONTEXT_FACTORY,&amp;#34;org.jnp.interfaces.NamingContextFactory&amp;#34;); w_param.put(javax.naming.Context.PROVIDER_URL, &amp;#34;jnp://192.168.168.128:1099/&amp;#34;); javax.naming.Context ctx = new javax.naming.InitialContext(w_param); // Get advanced pricing EJB home Object obj = ctx.lookup(&amp;#34;cic.CICCorbaManagerEJBHome&amp;#34;); cic.CICCorbaManagerEJBHome w_corbasHome = (cic.CICCorbaManagerEJBHome)javax.rmi.PortableRemoteObject.narrow(obj,cic.CICCorbaManagerEJBHome.class); // Create a new advanced pricing session cic.CICCorbaManagerEJB w_corbasManager = w_corbasHome.</description>
    </item>
    
    <item>
      <title>Accès au WS Sécurisé en .Net</title>
      <link>/development/dotnet/acces-au-ws-securise-en-.net.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/dotnet/acces-au-ws-securise-en-.net.html</guid>
      <description>Depuis la version 8 (je sais plus quel fix), les services Cameleon sont sécurisé. La difficulté est donc maintenant de les accéder en .Net, c&amp;rsquo;est moins facile qu&amp;rsquo;en Java !
Avec chaque WS client .Net, il y a un fichier de configuration associé dans lequel on met par exemple le endpoint et ce genre de truc. C&amp;rsquo;est dans ce fichier qu&amp;rsquo;il faut configurer l&amp;rsquo;authentification du WS en ajoutant les lignes :</description>
    </item>
    
    <item>
      <title>Accéder un membre classe private</title>
      <link>/development/java/acceder-un-membre-classe-private.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/acceder-un-membre-classe-private.html</guid>
      <description>Pour des raison de test, on peut avoir besoin d&amp;rsquo;accéder des membres de classe privé pour tester leur contenu. Il est possible de faire ça sans forcément ajouter des accesseurs &amp;ldquo;juste pour les tests&amp;rdquo; sur le classe testé.
public static &amp;lt;T&amp;gt; Object getPrivateMember(T testObject, String fieldName) { try { Field field = testObject.getClass().getDeclaredField(fieldName); field.setAccessible(true); return field.get(testObject); } catch (Exception e) { throw new RuntimeException(e); } } Et à l’usage :</description>
    </item>
    
    <item>
      <title>Ajouter un certificat pour les connexions SSL Java</title>
      <link>/development/java/ajouter-un-certificat-pour-les-connexions-ssl-java.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/ajouter-un-certificat-pour-les-connexions-ssl-java.html</guid>
      <description>Symptôme Dans le cas par exemple d&amp;rsquo;une connexion en LDAPS (LDAP via SSL) on a de bonne chance de se prendre ce genre d’erreur :
javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target at com.sun.net.ssl.internal.ssl.Alerts.getSSLException(Alerts.java:150) at com.sun.net.ssl.internal.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1584) at com.sun.net.ssl.internal.ssl.Handshaker.fatalSE(Handshaker.java:174) at com.sun.net.ssl.internal.ssl.Handshaker.fatalSE(Handshaker.java:168) at com.sun.net.ssl.internal.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:848) at com.sun.net.ssl.internal.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:106) at com.sun.net.ssl.internal.ssl.Handshaker.processLoop(Handshaker.java:495) at com.sun.net.ssl.internal.ssl.Handshaker.process_record(Handshaker.java:433) ...  Note que c’est la même pour les accès à des Web-Service en HTTPS via Axis</description>
    </item>
    
    <item>
      <title>Ajouter une Police de caractère à Java</title>
      <link>/development/java/ajouter-une-police-de-caractere-a-java.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/ajouter-une-police-de-caractere-a-java.html</guid>
      <description>La question se pose notement pour Jasper quand il faut lui rajouter des fonts.
Sous Linux, il faut mettre le fichier TTF dans le répertoire : /usr/lib/jvm/java-6-sun/jre/lib/fonts ou créer un lien dans ce répertoire vers le TTF.</description>
    </item>
    
    <item>
      <title>Appeler un Web-Service au travers d’un proxy</title>
      <link>/development/java/appeler-un-web-service-au-travers-d-un-proxy.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/appeler-un-web-service-au-travers-d-un-proxy.html</guid>
      <description>Pour l&amp;rsquo;instant je n&amp;rsquo;ai pas eu le cas avec Axis 1 donc on verra comment ça marche pour Axis 1, là c&amp;rsquo;est une solution Axis 2.
Donc depuis le Stub généré par Axis 2, voilà le code :
Options options = service._getServiceClient().getOptions(); HttpTransportProperties.ProxyProperties pp = new HttpTransportProperties.ProxyProperties(); pp.setProxyName(&amp;#34;proxy.tl.internal&amp;#34;); pp.setProxyPort(3128); options.setProperty(HTTPConstants.PROXY,pp); service étant l&amp;rsquo;instance de la classe Stub.</description>
    </item>
    
    <item>
      <title>Autoriser l’acces au DISPLAY pour un container specifique</title>
      <link>/outils/docker/autoriser-lacces-au-display-pour-un-container-specifique.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/autoriser-lacces-au-display-pour-un-container-specifique.html</guid>
      <description>Avec les nouvelles version du noyau, le DISPLAY est plus verrouillé qu’avant et des problèmes de DISPLAY interviennent lorsque l’on veut accéder à une appli graphique à l’intérieur d’un docker. Pour résoudre ce problème il faut autoriser le DISPLAY pour le container, pour cela :
{% raw %}xhost +local:`docker inspect --format=&amp;#39;{{ .Config.Hostname }}&amp;#39; $containerId`{% endraw %} L’idéal serait de la mettre ensuite dans le démarrage du système &amp;hellip;</description>
    </item>
    
    <item>
      <title>Changer le répertoire des images docker</title>
      <link>/outils/docker/changer-le-repertoire-des-images-docker.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/changer-le-repertoire-des-images-docker.html</guid>
      <description>Comme j&amp;rsquo;ai deux disques durs et que je voudrais pas charger le SSD pour rien, je voulais changer le répertoire des images.
Pour ça, dans le fichier /etc/default/docker.io il faut rajouter l&amp;rsquo;option -g dans les options :
# Use DOCKER_OPTS to modify the daemon startup options. #DOCKER_OPTS=&amp;quot;--dns 8.8.8.8 --dns 8.8.4.4&amp;quot; DOCKER_OPTS=&amp;quot;-g /home/docker&amp;quot;  pensez à créer le nouveau répertoire, voire à y copier le contenu de l&amp;rsquo;ancien répertoire /var/lib/docker</description>
    </item>
    
    <item>
      <title>Classes Javascript propres</title>
      <link>/development/javascript/classes-javascript-propres.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/javascript/classes-javascript-propres.html</guid>
      <description>Il existe de nombreuses façons de coder en Javascript. La plus fréquente est malheureusement la plus crade : lister ses fonctions les une après les autres&amp;hellip;
Voici une méthode pour faire ça moins crados, il en existe peut être de meilleures mais celle-ci a le mérite d&amp;rsquo;être très propre et très lisible.
var monProjet = {}; // On crée une variable globale du nom du projet // Ce tableau permettra de stocker et récupérer facilement les objets créés.</description>
    </item>
    
    <item>
      <title>Concepts intéressants en Java</title>
      <link>/development/java/concepts-interessant-en-java-7.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/concepts-interessant-en-java-7.html</guid>
      <description>Java 9 Jigsaw Java 8 Dépendence des packages L&amp;rsquo;outil jdeps permet de visualiser les dépendances inter-package d&amp;rsquo;un jar. L&amp;rsquo;option -jdkinternal permet de mettre en évidence l&amp;rsquo;utilisation d&amp;rsquo;API interne à Java.
Concaténation de chaine L&amp;rsquo;utilisation d&amp;rsquo;un StringBuilder n&amp;rsquo;est utile que dans le cas d&amp;rsquo;une boucle. En dehors de ça, le + aura plus de chance d&amp;rsquo;être optimisé correctement par le JIT.
ArrayList vs LinkedList Avec les CPU ressant, les ArrayList ont des perf meilleure que les LinkedList.</description>
    </item>
    
    <item>
      <title>Configuration Log4j</title>
      <link>/development/java/configuration-log4j.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/configuration-log4j.html</guid>
      <description>Voilà un log4j.properties qui va bien :
log4j.rootLogger = INFO, console log4j.logger.com.livingobjects.pmin = DEBUG log4j.appender.console=org.apache.log4j.ConsoleAppender log4j.appender.console.layout=org.apache.log4j.PatternLayout log4j.appender.console.layout.conversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %t %C{1}:%L - %m%n log4j.appender.METRICS=org.apache.log4j.ConsoleAppender log4j.appender.METRICS.layout=org.apache.log4j.PatternLayout log4j.appender.METRICS.layout.conversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p - %m%n log4j.logger.com.livingobjects.pmin.cdr.metrics = INFO, METRICS log4j.additivity.com.livingobjects.pmin.cdr.metrics = false</description>
    </item>
    
    <item>
      <title>Connection securisé et reverse proxy</title>
      <link>/development/spring/secure-connection-and-reverse-proxy.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/spring/secure-connection-and-reverse-proxy.html</guid>
      <description>Dans le cadre d’un projet, j’ai une configuration Spring Secure tel que :
... http.requiresChannel() .antMatchers(&amp;#34;/client/&amp;#34;).requiresSecure() .antMatchers(&amp;#34;/fr/client/&amp;#34;).requiresSecure() .antMatchers(&amp;#34;/es/client/&amp;#34;).requiresSecure() .antMatchers(&amp;#34;/en/client/&amp;#34;).requiresSecure() ... Ce qui provoque un redirect vers https si l’on tente d’accéder à l’une de ces URL en http.
Le problème est lorsque que je mets un reverse proxy NginX devant, c’est lui qui s’occupe du https, il redirige vers mes routes Spring en http. Spring ne permet de configurer qu’un seul port de serveur qui peut faire http/https.</description>
    </item>
    
    <item>
      <title>Connexion LDAP Exchange</title>
      <link>/development/java/connexion-ldap-exchange.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/connexion-ldap-exchange.html</guid>
      <description>L&amp;rsquo;idée est d&amp;rsquo;expliquer comment, depuis Java, se connecter à un serveur LDAP. Mais pas n&amp;rsquo;importe lequel, un serveur LDAP Exchange. Ben oui, Microsoft à beau se standardisé un minimum, de là à faire tout comme les autres, faudrait pas pousser !
Implémentation via JNDI Plusieurs type d&amp;rsquo;implémentation existent pour se connecter à un serveur LDAP. La plus utilisé et la plus &amp;ldquo;standard&amp;rdquo; est de se connecter en utilisant les interfaces JNDI.</description>
    </item>
    
    <item>
      <title>Convertir un date entre Timezone avec Jodatime</title>
      <link>/development/java/convertir-un-date-entre-timezone-avec-jodatime.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/convertir-un-date-entre-timezone-avec-jodatime.html</guid>
      <description>DateTime initialTime = new DateTime(timestamp.getTime()) .withZoneRetainFields(vpnNeType.getTimeZone().get()) .withZone(targetTimeZone); dataDate = initialTime.toLocalDateTime().toDate(); Le new Datetime() crée un object Datetime à partir d&amp;rsquo;un timestamp mais en partant du principe que la TZ est la default. withZoneRetainFields change la TZ sans changer la date, withZone change la TZ et converti la date. .toLocalDateTime().toDate() re-converti en date en tenant compte de la TZ.</description>
    </item>
    
    <item>
      <title>Docker failed to create image rootfs</title>
      <link>/outils/docker/docker--failed-to-create-image-rootfs.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/docker--failed-to-create-image-rootfs.html</guid>
      <description>En voulant puller une image docker depuis le registry j&amp;rsquo;ai cette erreur quand je suis en device-mapper :
82f4a6e0947d: Error pulling image (jre7u67) from my-docker-hub/java, Driver devicemapper failed to create image rootfs 511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158: Can&#39;t set task name / dev/mapper/docker-8:2-5637992-pool name /dev/mapper/docker-8:2-5637992-pool 2014/11/25 15:05:47 Error pulling image (jre7u67) from my-docker-hub/java, Driver devicemapper failed to create image rootfs 511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158: Can&#39;t set task name /dev/mapper/docker-8:2-5637992-pool  Pour corriger :
sudo service docker stop sudo rm -Rf /var/lib/docker sudo service docker start</description>
    </item>
    
    <item>
      <title>Export Importer une image Docker</title>
      <link>/outils/docker/export-importer-une-image-docker.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/export-importer-une-image-docker.html</guid>
      <description>Pour exporter :
docker save mynewimage &amp;gt; /tmp/mynewimage.tar bzip2 /tmp/mynewimage.tar Pour ré-importer:
bzip2 -d /tmp/mynewimage.tar.bz2 docker load &amp;lt; /tmp/mynewimage.</description>
    </item>
    
    <item>
      <title>Hack CSS</title>
      <link>/development/hacks-css.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/hacks-css.html</guid>
      <description>Pour ceux que le savent pas, un hack CSS consiste à exploiter un bug ou plutôt un manque fonctionnel afin d&amp;rsquo;écrire un seul et unique fichier CSS compatible avec un maximum de navigateur. Par exemple, un hack très répandu mais qui ne fonctionne plus maintenant était la directive !IMPORTANT dans les propriétés CSS.
Comment effacer le texte d&amp;rsquo;un bouton .button { background-image: url(&amp;#39;my-picture-with-text.jpg&amp;#39;); text-indent: -9999px; } Sauf que ça ne fonctionne pas sur IE.</description>
    </item>
    
    <item>
      <title>IllegalStateException: SimplePanel</title>
      <link>/development/gwt/illegalstateexception-simplepanel.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/gwt/illegalstateexception-simplepanel.html</guid>
      <description>Encore un truc qui m&amp;rsquo;a pris la tête ! Après l&amp;rsquo;écriture d&amp;rsquo;une page uiBinder, je me retrouve avec cette error :
IllegalStateException: SimplePanel can only contain one child widget  Alors que nulle part dans mon code je n&amp;rsquo;utilise de SimplePanel ! Après recherche, il s&amp;rsquo;avère que le FormPanel et le DecoratorPanel dérivent tout deux du SimplePanel qui n&amp;rsquo;accepte pas plus d&amp;rsquo;un seul Widget à l&amp;rsquo;intérieur. Tout s&amp;rsquo;illumine, j&amp;rsquo;ai un FormPanel avec plusieurs widget dedans.</description>
    </item>
    
    <item>
      <title>InetAddress does’nt resolve ip on alpine docker container</title>
      <link>/outils/docker/inetaddress-doesnt-resolve-ip-on-alpine-docker-container.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/inetaddress-doesnt-resolve-ip-on-alpine-docker-container.html</guid>
      <description>C&amp;rsquo;est un problème qu&amp;rsquo;on a rencontré quand on a voulu réduire la taille des docker en utilisant l&amp;rsquo;image Alpine comme image de base.
Symptome Exception in thread &amp;quot;main&amp;quot; java.net.UnknownHostException: mysql: unknown error at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method) at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:928) at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1323) at java.net.InetAddress.getAllByName0(InetAddress.java:1276) at java.net.InetAddress.getAllByName(InetAddress.java:1192) at java.net.InetAddress.getAllByName(InetAddress.java:1126) at java.net.InetAddress.getByName(InetAddress.java:1076) at SomaDBTest.main(SomaDBTest.java:52)  Solution En gros l&amp;rsquo;image Alpine veut par défaut résoudre les noms de machine pas DNS en priorité au lieu d&amp;rsquo;utiliser d&amp;rsquo;abord les fichiers (hosts).</description>
    </item>
    
    <item>
      <title>Installer Java Sun JDK sous Debian</title>
      <link>/development/java/installer-java-sun-jdk-sous-debian.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/installer-java-sun-jdk-sous-debian.html</guid>
      <description>C&amp;rsquo;est très simple mais faut avoir les bons dépôt activé.
Vérifier la liste de ces dépôts Éditer le fichier /etc/apt/sources.list et faites en sorte qu&amp;rsquo;il ressemble à ça :
# deb cdrom:[Debian GNU/Linux testing _Wheezy_ - Official Snapshot i386 CD Binary-1 20111205-04:44]/ wheezy main deb http://ftp.fr.debian.org/debian/ testing main contrib non-free deb-src http://ftp.fr.debian.org/debian/ testing main contrib non-free deb http://security.debian.org/ testing/updates main contrib non-free deb-src http://security.debian.org/ testing/updates main contrib non-free deb http://ftp.</description>
    </item>
    
    <item>
      <title>Lancer Neo4j Impermanent Database &#43; REST Server sur un port aléatoire</title>
      <link>/development/java/start-neo4j-impermanent-database-&#43;-rest-server-on-random-port-for-test.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/start-neo4j-impermanent-database-&#43;-rest-server-on-random-port-for-test.html</guid>
      <description>Pour des tests par exemple, vu que la licence Neo4j ne permet que l&amp;rsquo;utilisation des API REST, on peut avoir besoin lors de test de lancer un server éphémaire sur lequel brancher les jeux de test. Cela se fait en deux étapes : * Lancement du serveur neo4j * Lancement de la surcouche REST
db = new TestGraphDatabaseFactory().newImpermanentDatabase(); boolean available = db.isAvailable(5000); assert available; int start = -1; Random random = new Random(); while (start !</description>
    </item>
    
    <item>
      <title>Maven Release Plugin</title>
      <link>/development/java/maven-release-plugin.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/maven-release-plugin.html</guid>
      <description>Quelques explications sur le fonctionnement du Maven Release Plugin utilisé pour l’automatisation des releases.
parent Déjà la première chose est de configurer les différents plugins de release dans le parent.
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-release-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.5.3&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;versions-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.5&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-javadoc-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;skip&amp;gt;true&amp;lt;/skip&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/plugin&amp;gt;  Maven Release Plugin Le Maven Release Plugin est le plugin qui va faire le gros du travail, Mettre à jour le pom avec les bons numéros de version, faire les commit et poser les tags.</description>
    </item>
    
    <item>
      <title>Maven: Exemple de settings.xml</title>
      <link>/development/java/maven-exemple-de-settings.xml.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/maven-exemple-de-settings.xml.html</guid>
      <description>A placer dans ~/.m2/settings.xml
&amp;lt;settings&amp;gt; &amp;lt;mirrors&amp;gt; &amp;lt;!-- Ajout du repos Nexus local --&amp;gt; &amp;lt;mirror&amp;gt; &amp;lt;!--This sends everything else to /public --&amp;gt; &amp;lt;id&amp;gt;nexus&amp;lt;/id&amp;gt; &amp;lt;mirrorOf&amp;gt;*&amp;lt;/mirrorOf&amp;gt; &amp;lt;url&amp;gt;http://nexus.mydomain.org/nexus/content/groups/public/&amp;lt;/url&amp;gt; &amp;lt;/mirror&amp;gt; &amp;lt;/mirrors&amp;gt; &amp;lt;profiles&amp;gt; &amp;lt;profile&amp;gt; &amp;lt;id&amp;gt;nexus&amp;lt;/id&amp;gt; &amp;lt;repositories&amp;gt; &amp;lt;repository&amp;gt; &amp;lt;id&amp;gt;nexus&amp;lt;/id&amp;gt; &amp;lt;url&amp;gt;http://nexus.mydomain.org/nexus/content/groups/public/&amp;lt;/url&amp;gt; &amp;lt;releases&amp;gt; &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt; &amp;lt;/releases&amp;gt; &amp;lt;snapshots&amp;gt; &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt; &amp;lt;/snapshots&amp;gt; &amp;lt;/repository&amp;gt; &amp;lt;/repositories&amp;gt; &amp;lt;pluginRepositories&amp;gt; &amp;lt;pluginRepository&amp;gt; &amp;lt;id&amp;gt;nexus&amp;lt;/id&amp;gt; &amp;lt;url&amp;gt;http://nexus.mydomain.org/nexus/content/groups/public/&amp;lt;/url&amp;gt; &amp;lt;releases&amp;gt; &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt; &amp;lt;/releases&amp;gt; &amp;lt;snapshots&amp;gt; &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt; &amp;lt;/snapshots&amp;gt; &amp;lt;/pluginRepository&amp;gt; &amp;lt;/pluginRepositories&amp;gt; &amp;lt;/profile&amp;gt; &amp;lt;profile&amp;gt;&amp;lt;!-- Ajout des infos pour sonar --&amp;gt; &amp;lt;id&amp;gt;sonar&amp;lt;/id&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;!-- SONAR--&amp;gt; &amp;lt;sonar.jdbc.url&amp;gt;jdbc:mysql://mysql.mydomain.org:3306/_sonar?useUnicode=true&amp;amp;amp;characterEncoding=utf8&amp;lt;/sonar.jdbc.url&amp;gt; &amp;lt;sonar.jdbc.username&amp;gt;sonar&amp;lt;/sonar.jdbc.username&amp;gt; &amp;lt;sonar.jdbc.password&amp;gt;sonar&amp;lt;/sonar.jdbc.password&amp;gt; &amp;lt;sonar.host.url&amp;gt;http://mysql.mydomain.org:9090&amp;lt;/sonar.host.url&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;/profile&amp;gt; &amp;lt;/profiles&amp;gt; &amp;lt;servers&amp;gt; &amp;lt;server&amp;gt; &amp;lt;id&amp;gt;nexus&amp;lt;/id&amp;gt; &amp;lt;username&amp;gt;deployment&amp;lt;/username&amp;gt; &amp;lt;password&amp;gt;deploy&amp;lt;/password&amp;gt; &amp;lt;/server&amp;gt; &amp;lt;/servers&amp;gt; &amp;lt;activeProfiles&amp;gt; &amp;lt;!</description>
    </item>
    
    <item>
      <title>Mode debug sur Tomcat</title>
      <link>/development/java/mode-debug-tomcat.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/mode-debug-tomcat.html</guid>
      <description>Comme pour [[jboss]], il est possible de démarrer Tomcat en mode debug pour pouvoir s&amp;rsquo;y connecter ensuite via [[Eclipse|eclipse]], il s&amp;rsquo;agit du mode JPDA :
catalina.sh jpda run Tomcat ecoute alors sur le port 8000.</description>
    </item>
    
    <item>
      <title>Module may need to be (re)compiled</title>
      <link>/development/gwt/module-may-need-to-be-re-compiled.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/gwt/module-may-need-to-be-re-compiled.html</guid>
      <description>Au lancement de l&amp;rsquo;appli on prend ce message GWT module may need to be (re)compiled.
En fait c&amp;rsquo;est parce que j&amp;rsquo;avais lancer auparavant l&amp;rsquo;appli en DevMod. depuis le répertoire src/main/webapp, GWT y a généré un fichier *.nocache.js qui lors du packaging du WAR vient systématiquement écraser celui généré par la compilation GWT précédente.
Ce fichier *.nocache.js de DevMod ne contient que le strict minimum pour s&amp;rsquo;exécuter. Il faut donc le supprimer de src/main/webapp et relancer la compil.</description>
    </item>
    
    <item>
      <title>Optimisation des statements Batch MySQL</title>
      <link>/development/java/optimisation-des-statements-batch-mysql.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/optimisation-des-statements-batch-mysql.html</guid>
      <description>Par défaut le mode batch du driver JDBC de MySQL n&amp;rsquo;est pas correctement optimisé. Il effectue un aller/retour serveur pour chaque requête au lieu de le faire en une seule fois.
Pour le rendre plainement opérationnel il faut ajouté l&amp;rsquo;option rewriteBatchedStatements à la connexion JDBC.</description>
    </item>
    
    <item>
      <title>Où télécharger les JDK ?</title>
      <link>/development/java/ou-telecharger-les-jdk.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/ou-telecharger-les-jdk.html</guid>
      <description>http://www.oracle.com/technetwork/java/archive-139210.html
Vous aurez besoin d&amp;rsquo;un login oracle !</description>
    </item>
    
    <item>
      <title>Problème de sérialisation</title>
      <link>/development/gwt/probleme-de-serialisation-avec-gwt.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/gwt/probleme-de-serialisation-avec-gwt.html</guid>
      <description>Voilà plusieurs fois que je me fais avoir !
Symptômes Lors d&amp;rsquo;un appel RPC dans [[GWT]] on se prend un erreur de sérialisation :
com.google.gwt.user.client.rpc.SerializationException: Type &#39;xxx&#39; was not included in the set of types which can be serialized by this SerializationPolicy or its Class object could not be loaded. For security purposes, this type will not be serialized.: instance = xxx@5f39ee05  Alors que la classe en question dérive bin de Serializable ?</description>
    </item>
    
    <item>
      <title>Registry Docker derrière un Nginx</title>
      <link>/outils/docker/registry-docker-derriere-un-nginx.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/registry-docker-derriere-un-nginx.html</guid>
      <description>L&amp;rsquo;idée est de placer un registry Docker derrière un frontal Nginx afin de faire du HTTPS voire de l&amp;rsquo;authentification.
Le premier truc c&amp;rsquo;est la conf Nginx :
server { listen 80; listen 443 ssl; server_name docker.livingobjects.com; access_log off; server_tokens off; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; # On commence par dire où se situent nos certificats SSL # On aurait pu les mettre séparément dans chaque &amp;#34;server&amp;#34; en ayant besoin. ssl_certificate /etc/nginx/ssl/docker.</description>
    </item>
    
    <item>
      <title>Remote JMX Console</title>
      <link>/development/java/remote-jmx-console.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/remote-jmx-console.html</guid>
      <description>Pour passer une application Java en JMX Remote Console, il faut ajouter des paramètres :
-Djava.rmi.server.hostname=172.17.10.19 -Dcom.sun.management.jmxremote.port=1088 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false  </description>
    </item>
    
    <item>
      <title>Remove ophans from docker registry</title>
      <link>/outils/docker/remove-ophans-from-docker-registry.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/remove-ophans-from-docker-registry.html</guid>
      <description>Il est compliqué de nettoyer un registry Docker (avant sa version 2.0 en tout cas). Voici un script qui supprime les images orpheline dans le registry.
#!/bin/bash  JQPATH=$(which jq) if [ &amp;#34;x$JQPATH&amp;#34; == &amp;#34;x&amp;#34; ]; then echo &amp;#34;Couldn&amp;#39;t find jq executable.&amp;#34; 1&amp;gt;&amp;amp;2 exit 2 fi set -eu shopt -s nullglob readonly base_dir=/data/docker_registry_backup/registry/ readonly output_dir=$(mktemp -d -t trace-images-XXXX) readonly jq=$JQPATH readonly repository_dir=$base_dir/repositories readonly image_dir=$base_dir/images readonly all_images=$output_dir/all readonly used_images=$output_dir/used readonly unused_images=$output_dir/unused function info() { echo -e &amp;#34;\nArtifacts available in $output_dir&amp;#34; } trap info EXIT ERR INT function image_history() { local readonly image_hash=$1 $jq &amp;#39;.</description>
    </item>
    
    <item>
      <title>Requête Oracle avec Variables Liées</title>
      <link>/development/java/requete-oracle-avec-variables-liees.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/requete-oracle-avec-variables-liees.html</guid>
      <description>C&amp;rsquo;est un info qui date mais c&amp;rsquo;est toujours juste.
C&amp;rsquo;est quoi des Bind Variable déjà ? Dans le processus d&amp;rsquo;exécution d&amp;rsquo;une requête, Oracle effectue plusieurs étapes. Parmi ces étapes, on retrouve le parsing. Durant cette étape, oracle décortique l&amp;rsquo;ordre SQL et choisit quel est le plan d&amp;rsquo;exécution le plus court pour récupérer les données ramenées par la requête.
Si une requête est exécuté 20 fois de suite, Oracle fait le parsing pour la première requête seulement.</description>
    </item>
    
    <item>
      <title>Répéter un test x fois avec jUnit</title>
      <link>/development/java/repeat-test-with-junit.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/repeat-test-with-junit.html</guid>
      <description>Ajouter la Rule RepeatRule :
@Rule public RepeatRule repeatRule = new RepeatRule(); Ajouter l&amp;rsquo;annotation @Repeat au test :
@Repeat(times = 100) Dans IntelliJ, les X exécutions n&amp;rsquo;apparaissent pas, il n&amp;rsquo;y a qu&amp;rsquo;une ligne mais qui a pris plus de temps.</description>
    </item>
    
    <item>
      <title>StringIndexOutOfBoundsException dans Ivy</title>
      <link>/development/java/stringindexoutofboundsexception-dans-ivy.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/stringindexoutofboundsexception-dans-ivy.html</guid>
      <description>Quand on utilise un serveur Ivy perso en plus d&amp;rsquo;un repo local. Qu&amp;rsquo;une des dépendances est en &amp;ldquo;latest.integration&amp;rdquo; et que le repo distant est accédé en SSH, on peut prendre une erreur ~StringIndexOutOfBoundsException disant qu&amp;rsquo;il y a un problème lors du listing du répertoire.
Cela vient du SSH. J&amp;rsquo;ai pas le détail mais on changeant dans le ivysettings.xml, au niveau du repo distant, &amp;ldquo;ssh&amp;rdquo; par &amp;ldquo;sftp&amp;rdquo;, ca se met à fonctionner correctement.</description>
    </item>
    
    <item>
      <title>Supprimer les images non taggé</title>
      <link>/outils/docker/supprimer-les-images-non-tagge.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/supprimer-les-images-non-tagge.html</guid>
      <description>Pour virer toutes les images non taggé :
docker rmi $(docker images | grep &amp;#39;^&amp;lt;none&amp;gt;&amp;#39; | awk &amp;#39;{print $3}&amp;#39;) Attention si l&amp;rsquo;image est utilisé par un conteneur ça marchera pas.
A partir de la 1.3.1 :
docker rmi $(docker images -f &amp;#34;dangling=true&amp;#34; -q)</description>
    </item>
    
    <item>
      <title>Supprimer les vieux conteneurs</title>
      <link>/outils/docker/supprimer-les-vieux-conteneurs.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/supprimer-les-vieux-conteneurs.html</guid>
      <description>Pour supprimer les vieux conteneur de plus d&amp;rsquo;une semaine par exemple :
docker ps -a | grep &amp;#39;weeks ago&amp;#39; | awk &amp;#39;{print $1}&amp;#39; | xargs docker rm -v  Les conteneurs issue d&amp;rsquo;images non taggé :
docker ps -a | awk &amp;#39;$2 ~ &amp;#34;[0-9a-f]{12}&amp;#34; {print $&amp;#34;$1&amp;#34;}&amp;#39; docker ps -a | awk &amp;#39;$2 ~ /^[0-9a-f]+$/ {print $1}&amp;#39; | xargs docker rm -v  Et pour virer tous les conteneurs arrété :</description>
    </item>
    
    <item>
      <title>System error on docker run</title>
      <link>/outils/docker/system-error-on-docker-run.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/system-error-on-docker-run.html</guid>
      <description> Après une mise à jour du système, au démarrage de mon container docker je prend l&amp;rsquo;erreur suivante :
Error response from daemon: Cannot start container {id}: [8] System error: open /sys/fs/cgroup/cpu,cpuacct/init.scope/system.slice/docker-{id}.scope/cpu.shares: no such file or directory 
C&amp;rsquo;est apparement lié a un bug Debian : https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=798778
Il est possible de palier en ajoutant --exec-opt native.cgroupdriver=cgroupfs dans /etc/default/docker.
Liens  https://stackoverflow.com/questions/32845917/system-error-on-docker-run  </description>
    </item>
    
    <item>
      <title>Tester des membres private</title>
      <link>/development/java/tester-des-membres-private.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/tester-des-membres-private.html</guid>
      <description>Un des truc compliqué quand on fait des test unitaire c&amp;rsquo;est de tester les membres private. Un solution pour faire ça :
/** * Gets the field value from an instance. The field we wish to retrieve is * specified by passing the name. The value will be returned, even if the * field would have private or protected access. */ private Object getField( Object instance, String name ) throws Exception { Class c = instance.</description>
    </item>
    
    <item>
      <title>Tester un numérique en JavaScript</title>
      <link>/development/javascript/tester-un-numerique-en-javascript.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/javascript/tester-un-numerique-en-javascript.html</guid>
      <description>Après des tas et des tas de tests, voici le façon de tester un numérique en [[JavaScript|javascript]] que passe le plus de cas :
/** * Check if value is numerical or not * @param strString	Value to check * @returns	True if value is numerical, False otherwise */ mgpRemainsDependant.isNumeric = function (strString) { return !isNaN(parseFloat(strString)) &amp;amp;&amp;amp; isFinite(strString); };  Attention tout de même, les nombres en hexa du type 0xFF passent &amp;hellip;</description>
    </item>
    
    <item>
      <title>Transformer une URL java en chemin complet</title>
      <link>/development/java/transformer-une-url-java-en-chemin-complet.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/transformer-une-url-java-en-chemin-complet.html</guid>
      <description>// w_fileURL est l&amp;#39;URL d&amp;#39;un fichier sur le serveur String w_realPath = request.getSession().getServletContext().getRealPath(&amp;#34;/&amp;#34;); String w_filePath = w_fileURL.replaceFirst(getSettings(request).getCodeBase(), &amp;#34;&amp;#34;); w_filePath = w_realPath+w_filePath.replaceAll(&amp;#34;[/\\\\]+&amp;#34;, &amp;#34;\\&amp;#34; + File.separator); Bien-sur ça marche si l&amp;rsquo;URL est l&amp;rsquo;URL d&amp;rsquo;un fichier sur le serveur ou la servlet s&amp;rsquo;exécute. Dans le cas présent, c&amp;rsquo;est le fichier d&amp;rsquo;un OMM.</description>
    </item>
    
    <item>
      <title>Télécharger Java en une ligne</title>
      <link>/development/java/telecharger-java-en-une-ligne.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/telecharger-java-en-une-ligne.html</guid>
      <description>Pour télécharger java en une ligne de commande avec wget :
wget --no-check-certificate --no-cookies - --header &amp;#34;Cookie: oraclelicense=accept-securebackup-cookie&amp;#34; http://download.oracle.com/otn-pub/java/jdk/7u51-b13/jdk-7u51-linux-x64.tar.gz Changer pour le JDK que l&amp;rsquo;on veut.</description>
    </item>
    
    <item>
      <title>Update toutes les images</title>
      <link>/outils/docker/update-toutes-les-images.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/update-toutes-les-images.html</guid>
      <description>Pour mettre à jour toutes les images d&amp;rsquo;un docker en une commande:
docker images | awk &amp;#39;{print $1}&amp;#39; | xargs -L1 docker pull</description>
    </item>
    
    <item>
      <title>Utiliser Firebug (Lite) avec IE</title>
      <link>/development/javascript/utiliser-firebug-lite-avec-ie.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/javascript/utiliser-firebug-lite-avec-ie.html</guid>
      <description>Autant avec Firefox le débogage de CSS ne fait pas vraiment peur, autant dés qu&amp;rsquo;on parle de problèmes IE et d&amp;rsquo;autant plus de problème IE6 ou 7, là c&amp;rsquo;est un peu plus flippant.
Alors il va exister exister une solution : https://getfirebug.com/firebuglite
C&amp;rsquo;est pas trop compliqué à utiliser, il suffit d&amp;rsquo;inclure le JS présent dans l&amp;rsquo;archive https://getfirebug.com/releases/lite/latest/firebug-lite.tar.tgz à l&amp;rsquo;intérieur de vos composants puis de créer un marque page avec le code suivant à l&amp;rsquo;intérieur :</description>
    </item>
    
    <item>
      <title>Utiliser Firebug sans planter IE7&amp;8</title>
      <link>/development/javascript/utiliser-firebug-sans-planter-ie7-8.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/javascript/utiliser-firebug-sans-planter-ie7-8.html</guid>
      <description>Firebug fournit justement un bout de code pour éviter de planter IE :
if (!window.console || !console.log || !console.debug) { var names = [&amp;#34;log&amp;#34;, &amp;#34;debug&amp;#34;, &amp;#34;info&amp;#34;, &amp;#34;warn&amp;#34;, &amp;#34;error&amp;#34;, &amp;#34;assert&amp;#34;, &amp;#34;dir&amp;#34;, &amp;#34;dirxml&amp;#34;, &amp;#34;group&amp;#34;, &amp;#34;groupEnd&amp;#34;, &amp;#34;time&amp;#34;, &amp;#34;timeEnd&amp;#34;, &amp;#34;count&amp;#34;, &amp;#34;trace&amp;#34;, &amp;#34;profile&amp;#34;, &amp;#34;profileEnd&amp;#34;]; if (!window.console) window.console = {}; for (var i = 0; i &amp;lt; names.length; ++i) { if (!window.console[names[i]]) window.console[names[i]] = function() {}; } }   http://code.google.com/p/fbug/source/browse/branches/firebug1.5/lite/firebugx.js  </description>
    </item>
    
    <item>
      <title>Visitor vs. InstanceOf</title>
      <link>/development/java/visitor-vs-instanceof.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/visitor-vs-instanceof.html</guid>
      <description>public abstract class PartialKPIResolution { public final String aggregation; public PartialKPIResolution(String aggregation) { this.aggregation = aggregation; } public static PartialFlatKPIResolution flat(String aggregation, ImmutableMap&amp;lt;RealmAttribute, PartialFlatRealmKPIResolution&amp;gt; byRealm) { return new PartialFlatKPIResolution(aggregation, byRealm); } public static PartialSyntheticKPIResolution synthetic(Formula syntheticFormula, ApplicationPhase applicationPhase, String aggregation, ImmutableMap&amp;lt;String, String&amp;gt; columnAggregations, ImmutableMap&amp;lt;String, PartialFlatRealmKPIResolution&amp;gt; columns) { return new PartialSyntheticKPIResolution(syntheticFormula, applicationPhase, aggregation, columnAggregations, columns); } public abstract &amp;lt;R&amp;gt; R visit(Visitor&amp;lt;R&amp;gt; visitor); public interface Visitor&amp;lt;R&amp;gt; { R visitFlat(PartialFlatKPIResolution resolution); R visitSynthetic(PartialSyntheticKPIResolution resolution); } }public class PartialFlatKPIResolution extends PartialKPIResolution { public final ImmutableMap&amp;lt;RealmAttribute, PartialFlatRealmKPIResolution&amp;gt; byRealm; public PartialFlatKPIResolution(String aggregation, ImmutableMap&amp;lt;RealmAttribute, PartialFlatRealmKPIResolution&amp;gt; byRealm) { super(aggregation); this.</description>
    </item>
    
    <item>
      <title>Web service erreur CS0029, CS0030</title>
      <link>/development/dotnet/web-service-erreur-cs0029-cs0030.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/dotnet/web-service-erreur-cs0029-cs0030.html</guid>
      <description>Lors de la création de client ou de serveur WSCart en .Net, on rencontre l&amp;rsquo;erreur CS0029, CS0030. C&amp;rsquo;est du à un problème d&amp;rsquo;interprétation du WSDL par .Net qui gère mal est attributs &amp;ldquo;unbounded&amp;rdquo; sur les type complex. Pour corriger, il faut, dans le fichier .cs généré avec le wsdl.exe de Microsoft, rechercher la chaine [][] et remplacer par []. On va normalement trouver 2 occurrences.
 http://www.developpez.net/forums/d1101500/dotnet/langages/csharp/web-service-erreur-cs0029-cs0030/  </description>
    </item>
    
    <item>
      <title>Weekly cleaner</title>
      <link>/outils/docker/weekly-cleaner.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/weekly-cleaner.html</guid>
      <description>A placer dans /etc/cron.weekly/clean-docker + chmod +x ...
docker rm -v $(docker ps -a -q) docker rmi $(docker images | grep &amp;#39;^&amp;lt;none&amp;gt;&amp;#39; | awk &amp;#39;{print $3}&amp;#39;) docker rmi $(docker images | grep &amp;#39;months ago&amp;#39; | awk &amp;#39;{print $3}&amp;#39;) Ca ve supprimer les images vieilles de plusieurs mois et celle non tagés ainsi que les conteneur associés.</description>
    </item>
    
    <item>
      <title>Xmx &amp; Xms par defaut</title>
      <link>/development/java/valeur-memoire-java-par-defaut.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/valeur-memoire-java-par-defaut.html</guid>
      <description>Linux java -XX:+PrintFlagsFinal -version 2&amp;gt;&amp;amp;1 | grep -i -E &amp;#39;heapsize|permsize|version&amp;#39; Windows java -XX:+PrintFlagsFinal -version 2&amp;gt;&amp;amp;1 | findstr /I &amp;#34;heapsize permsize version&amp;#34; Selon le système, les valeurs par défaut peuvent être différente avec les options -client et -server. Pour connaitre les valeurs par defaut il faut dans ce cas ajouter l&amp;rsquo;option pour avoir les valeurs correspondante.</description>
    </item>
    
  </channel>
</rss>
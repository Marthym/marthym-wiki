<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reflection on wiki.ght1pc9kc.fr</title>
    <link>/tags/reflection.html</link>
    <description>Recent content in Reflection on wiki.ght1pc9kc.fr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    
	<atom:link href="/tags/reflection/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Accéder un membre classe private</title>
      <link>/development/java/acceder-un-membre-classe-private.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/acceder-un-membre-classe-private.html</guid>
      <description>Pour des raison de test, on peut avoir besoin d&amp;rsquo;accéder des membres de classe privé pour tester leur contenu. Il est possible de faire ça sans forcément ajouter des accesseurs &amp;ldquo;juste pour les tests&amp;rdquo; sur le classe testé.
public static &amp;lt;T&amp;gt; Object getPrivateMember(T testObject, String fieldName) { try { Field field = testObject.getClass().getDeclaredField(fieldName); field.setAccessible(true); return field.get(testObject); } catch (Exception e) { throw new RuntimeException(e); } } Et à l’usage :</description>
    </item>
    
    <item>
      <title>Tester des membres private</title>
      <link>/development/java/tester-des-membres-private.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/tester-des-membres-private.html</guid>
      <description>Un des truc compliqué quand on fait des test unitaire c&amp;rsquo;est de tester les membres private. Un solution pour faire ça :
/** * Gets the field value from an instance. The field we wish to retrieve is * specified by passing the name. The value will be returned, even if the * field would have private or protected access. */ private Object getField( Object instance, String name ) throws Exception { Class c = instance.</description>
    </item>
    
  </channel>
</rss>
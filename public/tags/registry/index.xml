<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Registry on wiki.ght1pc9kc.fr</title>
    <link>/tags/registry.html</link>
    <description>Recent content in Registry on wiki.ght1pc9kc.fr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    
	<atom:link href="/tags/registry/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Remove ophans from docker registry</title>
      <link>/outils/docker/remove-ophans-from-docker-registry.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outils/docker/remove-ophans-from-docker-registry.html</guid>
      <description>Il est compliqu√© de nettoyer un registry Docker (avant sa version 2.0 en tout cas). Voici un script qui supprime les images orpheline dans le registry.
#!/bin/bash  JQPATH=$(which jq) if [ &amp;#34;x$JQPATH&amp;#34; == &amp;#34;x&amp;#34; ]; then echo &amp;#34;Couldn&amp;#39;t find jq executable.&amp;#34; 1&amp;gt;&amp;amp;2 exit 2 fi set -eu shopt -s nullglob readonly base_dir=/data/docker_registry_backup/registry/ readonly output_dir=$(mktemp -d -t trace-images-XXXX) readonly jq=$JQPATH readonly repository_dir=$base_dir/repositories readonly image_dir=$base_dir/images readonly all_images=$output_dir/all readonly used_images=$output_dir/used readonly unused_images=$output_dir/unused function info() { echo -e &amp;#34;\nArtifacts available in $output_dir&amp;#34; } trap info EXIT ERR INT function image_history() { local readonly image_hash=$1 $jq &amp;#39;.</description>
    </item>
    
  </channel>
</rss>
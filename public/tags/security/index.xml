<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on wiki.ght1pc9kc.fr</title>
    <link>/tags/security.html</link>
    <description>Recent content in Security on wiki.ght1pc9kc.fr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    
	<atom:link href="/tags/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Accès au WS Sécurisé en .Net</title>
      <link>/development/dotnet/acces-au-ws-securise-en-.net.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/dotnet/acces-au-ws-securise-en-.net.html</guid>
      <description>Depuis la version 8 (je sais plus quel fix), les services Cameleon sont sécurisé. La difficulté est donc maintenant de les accéder en .Net, c&amp;rsquo;est moins facile qu&amp;rsquo;en Java !
Avec chaque WS client .Net, il y a un fichier de configuration associé dans lequel on met par exemple le endpoint et ce genre de truc. C&amp;rsquo;est dans ce fichier qu&amp;rsquo;il faut configurer l&amp;rsquo;authentification du WS en ajoutant les lignes :</description>
    </item>
    
    <item>
      <title>Ajouter un certificat pour les connexions SSL Java</title>
      <link>/development/java/ajouter-un-certificat-pour-les-connexions-ssl-java.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/ajouter-un-certificat-pour-les-connexions-ssl-java.html</guid>
      <description>Symptôme Dans le cas par exemple d&amp;rsquo;une connexion en LDAPS (LDAP via SSL) on a de bonne chance de se prendre ce genre d’erreur :
javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target at com.sun.net.ssl.internal.ssl.Alerts.getSSLException(Alerts.java:150) at com.sun.net.ssl.internal.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1584) at com.sun.net.ssl.internal.ssl.Handshaker.fatalSE(Handshaker.java:174) at com.sun.net.ssl.internal.ssl.Handshaker.fatalSE(Handshaker.java:168) at com.sun.net.ssl.internal.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:848) at com.sun.net.ssl.internal.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:106) at com.sun.net.ssl.internal.ssl.Handshaker.processLoop(Handshaker.java:495) at com.sun.net.ssl.internal.ssl.Handshaker.process_record(Handshaker.java:433) ...  Note que c’est la même pour les accès à des Web-Service en HTTPS via Axis</description>
    </item>
    
    <item>
      <title>Change Active Directory password on Linux</title>
      <link>/linux/administration/change-active-directory-password-on-linux.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/administration/change-active-directory-password-on-linux.html</guid>
      <description>Pour changer son mot de passe ActiveDirectory sans passer par une machine Windows, il est possible de le faire en ligne de commande :
apt-get install samba-common-bin smbpasswd -r &amp;lt;IP ActiveDirectory&amp;gt; -U &amp;lt;user&amp;gt; Si le DNS est configuré correctement, il est possible de trouver son IP avec la commande suivante :
nslookup _ldap.</description>
    </item>
    
    <item>
      <title>Connection securisé et reverse proxy</title>
      <link>/development/spring/secure-connection-and-reverse-proxy.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/spring/secure-connection-and-reverse-proxy.html</guid>
      <description>Dans le cadre d’un projet, j’ai une configuration Spring Secure tel que :
... http.requiresChannel() .antMatchers(&amp;#34;/client/&amp;#34;).requiresSecure() .antMatchers(&amp;#34;/fr/client/&amp;#34;).requiresSecure() .antMatchers(&amp;#34;/es/client/&amp;#34;).requiresSecure() .antMatchers(&amp;#34;/en/client/&amp;#34;).requiresSecure() ... Ce qui provoque un redirect vers https si l’on tente d’accéder à l’une de ces URL en http.
Le problème est lorsque que je mets un reverse proxy NginX devant, c’est lui qui s’occupe du https, il redirige vers mes routes Spring en http. Spring ne permet de configurer qu’un seul port de serveur qui peut faire http/https.</description>
    </item>
    
    <item>
      <title>Crypter tar.gz avec mot de passe</title>
      <link>/linux/shell/crypter-tar.gz-avec-mot-de-passe.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/shell/crypter-tar.gz-avec-mot-de-passe.html</guid>
      <description>Il est très simple de crypter un fichier tar.gz et de lui assigner un mot de passe pour par exemple l&amp;rsquo;envoyer sur un cloud public :
tar cz folder_to_encrypt | \ 	openssl enc -aes-256-cbc -e &amp;gt; out.tar.gz.enc Le mot de passe est alors demandé.
Pour decrypter/décompresser :
openssl aes-256-cbc -d -in out.tar.gz.enc | tar xz Et voilà</description>
    </item>
    
    <item>
      <title>Créer un conteneur chiffré</title>
      <link>/linux/divers/creer-un-conteneur-chiffre.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/divers/creer-un-conteneur-chiffre.html</guid>
      <description>L&amp;rsquo;idée ici est de créer un fichier n&amp;rsquo;importe où sur le disque. Se fichier pourra être monté comme une partition et contiendra des données chiffrées.
Création du fichier Attention, c&amp;rsquo;est ici que l&amp;rsquo;on détermine la taille du fichier et c&amp;rsquo;est pas facile à changer par la suite
dd if=/dev/urandom of=testfile bs=1M count=5000  Ici on a un fichier de 5 Go.
Création de la partition On va ensuite monter ce ficheir comme une partition grâce à losetup</description>
    </item>
    
    <item>
      <title>Créer une partition chiffré sur une clé USB</title>
      <link>/linux/divers/creer-une-partition-chiffre-sur-une-cle-usb.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/divers/creer-une-partition-chiffre-sur-une-cle-usb.html</guid>
      <description>Do not remove this line (it will not be displayed) {:toc}  L&amp;rsquo;idée est de créer sur une clé USB une partition chiffré. Mais pas seulement, afin de rendre cette partition lisible sur Windows comme sur Linux et de pas avoir un clé vide sous Windows, ce qui semblerait louche, il faut avoir deux partition, une en clair et une en crypté. C&amp;rsquo;est pas si simple que ça en a l&amp;rsquo;air.</description>
    </item>
    
    <item>
      <title>DNS Securise</title>
      <link>/linux/network/dns-securise.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/network/dns-securise.html</guid>
      <description>L&amp;rsquo;objectif est de sécuriser les requêtes DNS en les cryptant. Sachant que Tor par défaut ne le fait pas. Il est possible de le configurer de façon a ce que les requêtes DNS passent elles aussi par Tor mais cela demande à changer le resolv.conf et a paramétrer Tor correctement. C&amp;rsquo;est pas forcément pratique même si c&amp;rsquo;est plus anonymisant que le cryptage du DNS vu que le serveur DNS ne sait pas qui lui a fait la requête.</description>
    </item>
    
    <item>
      <title>Débloquer le wifi</title>
      <link>/linux/network/debloquer-le-wifi.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/network/debloquer-le-wifi.html</guid>
      <description>Après une dés-activation du wifi dans network manager de ~GnomeShell, il est impossible de le ré-activer. Pour pouvoir le ré-activer voilà la manœuvre :
$ sudo rfkill list 0: sony-wifi: Wireless LAN Soft blocked: yes Hard blocked: no 1: sony-bluetooth: Bluetooth Soft blocked: no Hard blocked: no 3: phy0: Wireless LAN Soft blocked: yes Hard blocked: yes 5: hci0: Bluetooth Soft blocked: no Hard blocked: nosudo rfkill unblock 0 Il est maintenant possible de ré-activer le wifi dans l&amp;rsquo;interface.</description>
    </item>
    
    <item>
      <title>Effacer définitivement un disque dur</title>
      <link>/linux/shell/effacer-definitivement-un-disque-dur.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/shell/effacer-definitivement-un-disque-dur.html</guid>
      <description>L&amp;rsquo;objectif est de supprimer les données d&amp;rsquo;un disque dur de façon définitive pour se protéger d&amp;rsquo;une reconstruction de la table d&amp;rsquo;index
L’utilitaire « dd » fourni avec tous les *nix et dérivés, permet de faire de nombreuses manipulations sur des fichiers ou des systèmes de fichiers comme (liste non exhaustive): Formatter une disquette à partir d’une image, découper un fichier en plusieurs morceaux, faire une image d’un DVD ou encore — et c’est ce qui nous intéresse ici — détruire les données d’un disque dur en le remplissant de zéros ou de données aléatoires.</description>
    </item>
    
    <item>
      <title>HTTPS Securisé avec Nginx</title>
      <link>/serveurs/http/https-securise-avec-nginx.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/http/https-securise-avec-nginx.html</guid>
      <description>Générer des certificats SSL correctement configuré n&amp;rsquo;est pas aussi facile qu&amp;rsquo;il n&amp;rsquo;y parait !
Génération des certificats Creation de l&amp;rsquo;autorité de certification (CA) On commence par créer la clé, en 2048 sinon c&amp;rsquo;est pas suffisamment sécurisé :
openssl genrsa -des3 -out dumydomain-ca.key 2048 Puis on crée le certificat de la CA :
openssl req -new -x509 -days 3650 -key dumydomain-ca.key -out dumydomain-ca.crt Valable 10 ans.
Création du certificat pour notre serveur Dans cette procédure, le FDQN doit être exactement le même que le nom de domaine du serveur.</description>
    </item>
    
    <item>
      <title>Hôtes virtuels SSL multiples</title>
      <link>/serveurs/http/hotes-virtuels-ssl-multiple.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/http/hotes-virtuels-ssl-multiple.html</guid>
      <description>Alors on trouve sur internet une flopper de tuto pour configurer sous Apache des VirtualHost SSL multiple. On a beau les lire et les re-lire, essayer des centaines de combinaisons pour chaque fichier de configuration, on en vient toujours au même résultat : C&amp;rsquo;est le premier vhost qui est retourné !
Explication technique Ce que la plus part des tuto ne dit pas c&amp;rsquo;est déjà qu&amp;rsquo;il faut avoir des version d&amp;rsquo;Apache et de OpenSSL très récente pour que ça ai une chance de fonctionné.</description>
    </item>
    
    <item>
      <title>Probleme de politique de securite X11</title>
      <link>/linux/administration/probleme-de-politique-de-securite-x11.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/administration/probleme-de-politique-de-securite-x11.html</guid>
      <description> Symptome Au lancement du vmware-toolbox en tant que root, on prend l&amp;rsquo;erreur :
PuTTY X11 proxy: wrong authorisation protocol attempted  Solution Créer un fichier /root/.Xauthority
administrateur@ubuntu:~$ xauth list ubuntu/unix:10 MIT-MAGIC-COOKIE-1 c76ff33554b56b2a749019c13a1b71c5 administrateur@ubuntu:~$ sudo -i root@ubuntu:~# xauth add ubuntu/unix:10 MIT-MAGIC-COOKIE-1 c76ff33554b56b2a749019c13a1b71c5 xauth: file /root/.Xauthority does not exist Truc &amp;amp; Astuuuuuce Pour automatiser :
xauth list | while read x ; do sudo xauth add $x ; done</description>
    </item>
    
    <item>
      <title>SSH Vérification de la clé hôte échoué</title>
      <link>/linux/network/ssh--verification-de-la-cle-host-echoue.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/network/ssh--verification-de-la-cle-host-echoue.html</guid>
      <description>Symptome login@debian:~$ ssh server-ssh @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY! Someone could be eavesdropping on you right now (man-in-the-middle attack)! It is also possible that the RSA host key has just been changed. The fingerprint for the RSA key sent by the remote host is d7:16:94:8f:b9:e3:b0:16:3e:fc:e3:65:ba:d3:b4:1d. Please contact your system administrator. Add correct host key in /home/login/.</description>
    </item>
    
    <item>
      <title>Scanner les ports sur une IP</title>
      <link>/linux/network/scanner-les-ports-sur-une-ip.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/network/scanner-les-ports-sur-une-ip.html</guid>
      <description>Une commande toute conne permet de scanner les ports ouvert sur une machine et donne des tas d&amp;rsquo;information sur ce qui se trouve de l&amp;rsquo;autre coté :
nmap -sV ip-a-scanner -vvv Un truc qui peut servir pour lutter contre ça : http://portspoof.org/ ca va générer n&amp;rsquo;importe quoi sur tout les ports qu&amp;rsquo;ils soient ouvert ou fermé.</description>
    </item>
    
  </channel>
</rss>
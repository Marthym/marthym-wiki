<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Server on wiki.ght1pc9kc.fr</title>
    <link>/tags/server.html</link>
    <description>Recent content in Server on wiki.ght1pc9kc.fr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    
	<atom:link href="/tags/server/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title> Logger les requêtes Teradata</title>
      <link>/serveurs/teradata/logger-les-requetes-teradata.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/teradata/logger-les-requetes-teradata.html</guid>
      <description>Dans un console bteq connecté en dbc :
Pour un seul utilisateur. Mais ça a pas trop marché pour moi
begin query logging with explain,objects, sql on all account=(&amp;#39;myaccount&amp;#39;) end query logging with explain,objects, sql on all account=(&amp;#39;myaccount&amp;#39;) Pour tous les utilisateurs et là ça a fonctionné
begin query logging with objects, sql on all end query logging with objects, sql on all Et pour lister les règles
select * from dbc.</description>
    </item>
    
    <item>
      <title>1s de cache contre le downtime</title>
      <link>/serveurs/http/1s-de-cache-nginx.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/http/1s-de-cache-nginx.html</guid>
      <description>Copie depuis https://lord.re/posts/60-cache-proxy-nginx/ de lord@lord.re
Depuis que mon serveur ne me sert plus de routeur il m’arrive de le couper de temps à autres. Et pourtant mon site reste accessible. J’ai en fait, sur mon routeur, installé un container avec un nginx qui tourne et qui proxy. Les connexions se font donc via le nginx du routeur qui sert de cache quand le vrai serveur ne répond pas. Mais histoire de ne pas avoir de contenu pas à jour mais toujours d’une fraîcheur exemplaire je me contente d’un cache de maximum 1seconde.</description>
    </item>
    
    <item>
      <title>Changer le nom d’une machine sans péter XE</title>
      <link>/serveurs/oracle/changer-le-nom-d-une-machine-sans-casser-xe.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/oracle/changer-le-nom-d-une-machine-sans-casser-xe.html</guid>
      <description>Changer le nom d’une machine   Puis chercher les fichiers de configuration réseau (par défaut dans : /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/network/admin ) * listener.ora * tnsnames.ora
Remplacer l&amp;rsquo;ancien par le nouveau nom.
Attention, faut remplacer le NOM de la machine par le nouveau NOM, pas par l&amp;rsquo;IP ni par localhost ni un truc du genre sinon ça fonctionne pas !</description>
    </item>
    
    <item>
      <title>Changer le port de l’interface d’admin de XE</title>
      <link>/serveurs/oracle/changer-le-port-de-linterface-dadmin-de-xe.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/oracle/changer-le-port-de-linterface-dadmin-de-xe.html</guid>
      <description>Si vous utilisez CCM avec une base Oracle XE, vous allez devoir changer le port de l&amp;rsquo;interface d&amp;rsquo;administration de votre base Oracle XE. En effet, si l&amp;rsquo;interface d&amp;rsquo;Oracle XE est déjà installé sur le port 8080 et que vous installez ensuite CCM, CCM va quand même choisir le port 8080.
Il faut donc exécuter la manipulation suivante :
 Veiller à ce que votre base tourne Ouvrir une invite de commande Lancer sqlplus Se logguer en tant qu&amp;rsquo;utilisateur système Exécuter la commande suivante (exemple : on change le port 8080 pour le port 8280):  EXEC DBMS_XDB.</description>
    </item>
    
    <item>
      <title>Connaître l’encodage de sa base</title>
      <link>/serveurs/oracle/connaitre-lencodage-de-sa-base.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/oracle/connaitre-lencodage-de-sa-base.html</guid>
      <description>Il peut être utile de vérifier l&amp;rsquo;encodage de sa base Oracle, notamment en cas de problèmes de montage d&amp;rsquo;un dump. Pour cela, il existe un moyen très simple de le faire, à l&amp;rsquo;aide de la requête SQL suivante :
SELECT value$ FROM sys.props$ WHERE name = &amp;#39;NLS_CHARACTERSET&amp;#39;; On peut également exécuter cette autre requête SQL, qui remonte tous les paramètres de la base :
SELECT * FROM NLS_DATABASE_PARAMETERS;</description>
    </item>
    
    <item>
      <title>Connexion JBoss SQL-Server</title>
      <link>/serveurs/jboss/connexion-jboss-sql-server.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/jboss/connexion-jboss-sql-server.html</guid>
      <description>La configuration se fait dans les fichiers *-ds.xml présent dans le répertoire deploy du JBoss. Le but de cette page est surtout de donner la configuration pour les driver SQL-Server 2005 qui présentent des performence et une stabilité meilleure sur les versions récentes de SQL-Server.
Driver SQL-Server 2000 C&amp;rsquo;est la configuration par défaut à l&amp;rsquo;installation de CCS.
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;datasources&amp;gt; &amp;lt;local-tx-datasource&amp;gt; &amp;lt;jndi-name&amp;gt;ccpDataSource&amp;lt;/jndi-name&amp;gt; &amp;lt;connection-url&amp;gt;jdbc:microsoft:sqlserver://127.0.0.1:1433;DatabaseName=CCS44Gb;SelectMethod=cursor&amp;lt;/connection-url&amp;gt; &amp;lt;driver-class&amp;gt;com.microsoft.jdbc.sqlserver.SQLServerDriver&amp;lt;/driver-class&amp;gt; &amp;lt;user-name&amp;gt;sa&amp;lt;/user-name&amp;gt; &amp;lt;password&amp;gt;sa&amp;lt;/password&amp;gt; &amp;lt;!-- sql to call on an existing pooled connection when it is obtained from pool --&amp;gt; &amp;lt;check-valid-connection-sql&amp;gt;select &amp;#39;x&amp;#39;&amp;lt;/check-valid-connection-sql&amp;gt; &amp;lt;/local-tx-datasource&amp;gt; &amp;lt;/datasources&amp;gt; Les librairies de ce driver se composent de trois fichiers jar dans le répertoire deploy : * msbase.</description>
    </item>
    
    <item>
      <title>Cypher: Nodes sans Label</title>
      <link>/serveurs/neo4j/cypher-node-sans-label.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/neo4j/cypher-node-sans-label.html</guid>
      <description>Pour lister (et supprimer) les Nodes n&amp;rsquo;aillant aucun label :
MATCH (n) WHERE SIZE(LABELS(n)) = 0 DETACH DELETE n;</description>
    </item>
    
    <item>
      <title>Cypher: Paths sans path intermédiaire</title>
      <link>/serveurs/neo4j/cypher-paths-sans-path-intermediaire.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/neo4j/cypher-paths-sans-path-intermediaire.html</guid>
      <description>Quand on demande un path a Neo4j il va nous donner avec les paths intermédiaire. Par exemple :
MATCH (:Attribute {_type:&amp;#39;realm&amp;#39;,name:&amp;#39;iwan&amp;#39;})&amp;lt;-[:Attribute]-(s:Planet), path = (s)-[:MdxPath*0..10]-&amp;gt;(:Planet) RETURN nodes(path) va retourner :
 interface interface / application interface / application / cos cpe  Alors que ce qui m&amp;rsquo;intéresse c&amp;rsquo;est juste les deux derniers. Je ne veux pas les chemins intermédiaires.
Pour n&amp;rsquo;avoir que les paths complet, la solution est de demander les paths pour lesquels le dernier node n&amp;rsquo;a pas de lien vers une Planet (dans le cas de l&amp;rsquo;exemple).</description>
    </item>
    
    <item>
      <title>Demarrage de JBoss en service</title>
      <link>/linux/administration/demarrage-de-jboss-en-service.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/administration/demarrage-de-jboss-en-service.html</guid>
      <description>Ce qui est pas si évident que ça a faire sous Linux. C&amp;rsquo;est utile si on n&amp;rsquo;a pas accès à la console de la machine ou pour que le JBoss se lance tout seul au démarrage.
Script init.d Il faut commencé par créer un script d&amp;rsquo;init. Pour cela on peut se servir de celui se trouvant à la fin de la page.
Attention de bien penser à changer la variable &amp;ldquo;CAMELEON_DIR&amp;rdquo; avec le bon chemin d&amp;rsquo;installation de JBoss.</description>
    </item>
    
    <item>
      <title>Démarrage/Arrêt automatique d’Oracle sous Linux</title>
      <link>/serveurs/oracle/demarrage-arret-automatique-doracle-sous-linux.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/oracle/demarrage-arret-automatique-doracle-sous-linux.html</guid>
      <description>Modifier le fichier /etc/oratab (ou /var/opt/oracle selon install) Ajouter &amp;lt;SID&amp;gt;:&amp;lt;ORACLE_HOME&amp;gt;:Y le &amp;ldquo;Y&amp;rdquo; indiquant si la base doit être ou non démarré par &amp;ldquo;dbstart&amp;rdquo; et &amp;ldquo;dbshut&amp;rdquo;.
Créer le script &amp;ldquo;/etc/init.d/dboracle&amp;rdquo; contenant :
#!/bin/bash  #  # chkconfig: 35 99 10  # description: Starts and stops Oracle processes  #  # Set ORA_HOME to be equivalent to the $ORACLE_HOME  # from which you wish to execute dbstart and dbshut;  #  # Set ORA_OWNER to the user id of the owner of the # Oracle database in ORA_HOME.</description>
    </item>
    
    <item>
      <title>Démarrer/Arrêter une base en ligne de commande Windows</title>
      <link>/serveurs/oracle/demarrer-arreter-une-base-en-ligne-de-commande-windows.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/oracle/demarrer-arreter-une-base-en-ligne-de-commande-windows.html</guid>
      <description>Pour démarrer :
C:\&amp;gt; %ORACLE_HOME%\bin\oradim -startup -sid ORCL92 -usrpwd manager -starttype SRVC,INST -pfile C:\oracle9i\admin\ORCL92\pfile\init.ora  Pour arrêter :
C:\&amp;gt; %ORACLE_HOME%\bin\oradim -shutdown -sid ORCL92 -shutttype SRVC,INST -shutmode A  </description>
    </item>
    
    <item>
      <title>Désinstaller Oracle XE sous Linux</title>
      <link>/serveurs/oracle/desinstaller-oracle-xe-sous-linux.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/oracle/desinstaller-oracle-xe-sous-linux.html</guid>
      <description> C&amp;rsquo;est pas bien compliqué mais pour le faire proprement ya quelques trucs à pas oublier.
Désinstallation des packages Debian apt-get remove oracle-xe-universal apt-get purge oracle-xe-universal Suppression des fichiers restant rm -Rf /usr/lib/oracle/xe rm -Rf /etc/oratab rm -Rf /etc/init.d/oracle-xe rm -Rf /etc/sysconfig/oracle-xe rm -Rf $(find . -name *oracle*)</description>
    </item>
    
    <item>
      <title>Erreur de read-only status avec JDBC</title>
      <link>/serveurs/mysql/erreur-de-read-only-status-avec-jdbc.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/mysql/erreur-de-read-only-status-avec-jdbc.html</guid>
      <description>Symptômes J&amp;rsquo;ai rencontré l&amp;rsquo;erreur suivante :
java.io.IOException: java.sql.SQLException: Could not retrieve transation read-only status server Caused by: java.sql.SQLException: Could not retrieve transation read-only status server Caused by: java.sql.SQLException: REPLACE INTO `db`.`test_table` (`timestamp`,`database`,`table`,`columns`,`lines`,`before`,`write`,`wait`) VALUES (?,?,?,?,?,?,?,?) ... 4 common frames omitted Caused by: java.sql.SQLException: Could not retrieve transation read-only status server at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1086) ~[mysql-connector-java-5.1.28.jar:na] at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989) ~[mysql-connector-java-5.1.28.jar:na] at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975) ~[mysql-connector-java-5.1.28.jar:na] at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920) ~[mysql-connector-java-5.1.28.jar:na] at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:951) ~[mysql-connector-java-5.1.28.jar:na] at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:941) ~[mysql-connector-java-5.1.28.jar:na] at com.mysql.jdbc.ConnectionImpl.isReadOnly(ConnectionImpl.java:3955) ~[mysql-connector-java-5.</description>
    </item>
    
    <item>
      <title>Exporter/Importer une base d’un dump</title>
      <link>/serveurs/mysql/exporter-importer-une-base-d-un-dump.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/mysql/exporter-importer-une-base-d-un-dump.html</guid>
      <description>Pour exporter en gzip
mysqldump -u user -p database | gzip &amp;gt; database.sql.gz Pour importer une seule base à partir d&amp;rsquo;un dump complet, il faut entrer la commande suivante :
mysql -u USERNAME -p --one-database BASE_A_RESTAURER &amp;lt; dumpcomplet.sql Remplacez BASE_A_RESTAURER par le nom de la base de votre choix qui est contenue dans le fichier dumpcomplet.sql.
La même chose avec un fichier d&amp;rsquo;export compressé en tar.gz
zcat your_db_dump.sql.tar.gz | mysql -u USERNAME -p BASE_A_RESTAURER</description>
    </item>
    
    <item>
      <title>Exporter/importer un schéma de base</title>
      <link>/serveurs/oracle/exporter-importer-un-schema-de-base.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/oracle/exporter-importer-un-schema-de-base.html</guid>
      <description>c:\&amp;gt; exp edge/leon file=c:\temp\EDGE_SP3_FIX016_AXA.dmp direct=y  SQL&amp;gt; create user edge identified by leon; SQL&amp;gt; grant connect,resource to edgec:\&amp;gt; imp system/manager file=c:\temp\EDGE_SP3_FIX016_AXA.dmp ignore=y fromuser=edge touser=edge Voir aussi &amp;rarr; Utiliser DataPump en ligne de commande</description>
    </item>
    
    <item>
      <title>Fusionner les espaces libre contigus</title>
      <link>/serveurs/oracle/fusionner-les-espaces-libre-contigus.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/oracle/fusionner-les-espaces-libre-contigus.html</guid>
      <description>Très pratique surtout pour les anciennes version:
ALTER TABLESPACE toto COALESCE</description>
    </item>
    
    <item>
      <title>Gestion des dates Oracle</title>
      <link>/serveurs/oracle/gestion-des-dates-oracle.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/oracle/gestion-des-dates-oracle.html</guid>
      <description>La pseudo colonne SYSDATE affiche la date et l&amp;rsquo;heure courante. Ajouter 1 à SYSDATE avance la date d&amp;rsquo;un jour. On peut alors utiliser des fractions pour ajouter des heures/minutes/secondes. Voilà un exemple :
SQL&amp;gt; select sysdate, sysdate+1/24, sysdate +1/1440, sysdate + 1/86400 from dual; SYSDATE SYSDATE+1/24 SYSDATE+1/1440 SYSDATE+1/86400 -------------------- -------------------- -------------------- -------------------- 03-Jul-2002 08:32:12 03-Jul-2002 09:32:12 03-Jul-2002 08:33:12 03-Jul-2002 08:32:13 Et quelques exemples possible :
   Description Date Expression     Maintenant SYSDATE   Lendemain SYSDATE + 1   Dans 7 jours SYSDATE + 7   Dans 1 heure SYSDATE + 1&amp;frasl;24   Dans 3 heures SYSDATE + 3&amp;frasl;24   Dans une demi-heure SYSDATE + 1&amp;frasl;48   Dans 10mn SYSDATE + 10&amp;frasl;1440   Dans 30s SYSDATE + 30&amp;frasl;86400   Demain à minuit TRUNC(SYSDATE + 1)   Demain à 8h TRUNC(SYSDATE + 1) + 8&amp;frasl;24   Prochain Lundi midi NEXT_DAY(TRUNC(SYSDATE), &amp;lsquo;MONDAY&amp;rsquo;) + 12&amp;frasl;24   Premier jour du moi à minuit TRUNC(LAST_DAY(SYSDATE ) + 1)   Prochain Lundi, Mercredi et Vendredy à 9h TRUNC(LEAST(NEXT_DAY(sysdate,&amp;ldquo;MONDAY&amp;rsquo; &amp;lsquo; ),NEXT_DAY(sysdate,&amp;ldquo;WEDNESDAY&amp;rdquo;), NEXT_DAY(sysdate,&amp;ldquo;FRIDAY&amp;rdquo; ))) + (9&amp;frasl;24)    </description>
    </item>
    
    <item>
      <title>Gérer l’ordre de déploiement dans JBoss</title>
      <link>/serveurs/jboss/gerer-l-ordre-de-deploiement-dans-jboss.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/jboss/gerer-l-ordre-de-deploiement-dans-jboss.html</guid>
      <description>C&amp;rsquo;est un question qui peut paraître inutile mais dans au moins un cas c&amp;rsquo;est crucial :p
Dans le cas de la création d&amp;rsquo;un WS Axis2, on utilise une classe AxisServlet qui se trouve être déployé dans l&amp;rsquo;EAR de CameleonEdge ! Dans ce cas, il est important que la webapp que l&amp;rsquo;on crée avec le WS soit déployé après l&amp;rsquo;EAR de Cameleon. Or, par défaut dans JBoss, les WAR sont quoi qu&amp;rsquo;il arrivent déployer avant les EAR, donc problème &amp;hellip;</description>
    </item>
    
    <item>
      <title>HTTPS Securisé avec Nginx</title>
      <link>/serveurs/http/https-securise-avec-nginx.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/http/https-securise-avec-nginx.html</guid>
      <description>Générer des certificats SSL correctement configuré n&amp;rsquo;est pas aussi facile qu&amp;rsquo;il n&amp;rsquo;y parait !
Génération des certificats Creation de l&amp;rsquo;autorité de certification (CA) On commence par créer la clé, en 2048 sinon c&amp;rsquo;est pas suffisamment sécurisé :
openssl genrsa -des3 -out dumydomain-ca.key 2048 Puis on crée le certificat de la CA :
openssl req -new -x509 -days 3650 -key dumydomain-ca.key -out dumydomain-ca.crt Valable 10 ans.
Création du certificat pour notre serveur Dans cette procédure, le FDQN doit être exactement le même que le nom de domaine du serveur.</description>
    </item>
    
    <item>
      <title>Hôtes virtuels SSL multiples</title>
      <link>/serveurs/http/hotes-virtuels-ssl-multiple.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/http/hotes-virtuels-ssl-multiple.html</guid>
      <description>Alors on trouve sur internet une flopper de tuto pour configurer sous Apache des VirtualHost SSL multiple. On a beau les lire et les re-lire, essayer des centaines de combinaisons pour chaque fichier de configuration, on en vient toujours au même résultat : C&amp;rsquo;est le premier vhost qui est retourné !
Explication technique Ce que la plus part des tuto ne dit pas c&amp;rsquo;est déjà qu&amp;rsquo;il faut avoir des version d&amp;rsquo;Apache et de OpenSSL très récente pour que ça ai une chance de fonctionné.</description>
    </item>
    
    <item>
      <title>Lister les locks sur Oracle</title>
      <link>/serveurs/oracle/lister-les-locks-sur-oracle.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/oracle/lister-les-locks-sur-oracle.html</guid>
      <description>prompt liste des utilisateurs qui lockent des tables select distinct username,sql_text from v$sqlarea,v$session,v$lock where user#=parsing_user_id and v$lock.sid=v$session.sid and username is not null and users_executing &amp;gt; 0 ;prompt liste des executions sql en cours select distinct username,disk_reads,rows_processed,sql_text from v$sqlarea,v$session where user#=parsing_user_id and username is not null and username not in (&amp;#39;SYS&amp;#39;,&amp;#39;SYSTEM&amp;#39;) and users_executing &amp;gt; 0 ; Plus un script sql pour lister les locks: lock.sql
{% include_relative .doc/lock.sql %}</description>
    </item>
    
    <item>
      <title>Mode debug sur Tomcat</title>
      <link>/development/java/mode-debug-tomcat.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/development/java/mode-debug-tomcat.html</guid>
      <description>Comme pour [[jboss]], il est possible de démarrer Tomcat en mode debug pour pouvoir s&amp;rsquo;y connecter ensuite via [[Eclipse|eclipse]], il s&amp;rsquo;agit du mode JPDA :
catalina.sh jpda run Tomcat ecoute alors sur le port 8000.</description>
    </item>
    
    <item>
      <title>Nginx WebDAV et problème de crochets</title>
      <link>/serveurs/http/nginx-webdav-et-probleme-de-crochets.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/http/nginx-webdav-et-probleme-de-crochets.html</guid>
      <description>En installant un serveur Webdav sur Nginx j&amp;rsquo;ai eu un problème avec les répertoires contenant des [] dans leur nom. Le répertoire sont toujours vide. Sachant que le Nginx WebDAV n&amp;rsquo;est proxifié par un frontal Nginx lui aussi.
En regardant bien la doc de proxy_pass on lit que le comportement du Nginx est différent selon que l&amp;rsquo;ont met ou non l&amp;rsquo;URI dans la commande :
 proxy_pass http://192.168.0.12; proxy_pass http://192.168.0.12/marthym;  Dans le premier cas, nginx transfère la requête telquelle, dans le second, nginx normalise l&amp;rsquo;URI.</description>
    </item>
    
    <item>
      <title>Optimiser les performances</title>
      <link>/serveurs/http/optimize-nginx-performances.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/http/optimize-nginx-performances.html</guid>
      <description>Do not remove {:toc}  Recopie d’un article de Quentin Busuttil sur Optimiser NGINX
Les workers Concentrons nous d’abord sur worker_processes. Cette directive spécifie le nombre total de workers à créer au démarrage de Nginx. La valeur optimale est d’en avoir un par cpu core. Si vous avez un VPS – lesquels ont souvent un vCPU avec un seul vCore – il arrive souvent que la valeur par défaut soit supérieure au nombre total de cores.</description>
    </item>
    
    <item>
      <title>Recovery required from position LogPosition</title>
      <link>/serveurs/neo4j/recovery-required-from-position-logposition.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/neo4j/recovery-required-from-position-logposition.html</guid>
      <description>Après un arrêt intenpestif ou une tentative de backup à l&amp;rsquo;arrache de la base neo4j, on a eu un soucis pour la relancer !
Symptomes Pas de message nulle part mais base non démarré !
Le seul truc visible était dans neo4j/data/graph.db/messages.log
[NeoStoreDataSource] Recovery required from position LogPosition  Un truc comme ça !
Solution Deux chose :
 Supprimer le store_lock dans graph.db Supprimer les log de transactions dans graph.</description>
    </item>
    
    <item>
      <title>Timezoner MySQL</title>
      <link>/serveurs/mysql/timezoner-mysql.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/mysql/timezoner-mysql.html</guid>
      <description>Dans le cas d&amp;rsquo;un MySQL sous docker, le server MySQL n&amp;rsquo;est pas Timezoné correctement. Par exemple, quand on lance la requête suivante :
mysql&amp;gt; SELECT @@global.time_zone, @@session.time_zone; +--------------------+---------------------+ | @@global.time_zone | @@session.time_zone | +--------------------+---------------------+ | SYSTEM | SYSTEM | +--------------------+---------------------+ 1 row in set (0.00 sec) Ce qui signifie que c&amp;rsquo;est la Timezone du système qui est utilisé. Un
date +%Z CEST nous confirme que nous sommes bien sur Europe/Paris.</description>
    </item>
    
    <item>
      <title>Tracer une requête Oracle</title>
      <link>/serveurs/oracle/tracer-une-requete-oracle.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/oracle/tracer-une-requete-oracle.html</guid>
      <description>Il arrive qu&amp;rsquo;une partie de l&amp;rsquo;appli (voire toute l&amp;rsquo;appli) rame particulièrement. Selon la version d&amp;rsquo;Oracle, il est plus ou moins facile de tracer une requête. Dans tout les cas, il peut arrivé qu&amp;rsquo;on est besoin d&amp;rsquo;un maximum d&amp;rsquo;info.
Oracle 10g et Entreprise Manager Sur un serveur 10g, le plus simple est d&amp;rsquo;ouvrir l&amp;rsquo;entreprise manager et de cliquer sur l&amp;rsquo;onglet performances. De là, sous le graphique, un lien &amp;ldquo;Sessions les plus consommatrices&amp;hellip;&amp;rdquo; qui permet de visualiser les requêtes et les sessions les plus gourmandes.</description>
    </item>
    
    <item>
      <title>UUID Most Significant Bits</title>
      <link>/serveurs/mysql/uuid-most-significant-bits.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/mysql/uuid-most-significant-bits.html</guid>
      <description>Comment dans une requête MySQL peut on extraire les bits les plus significatif d&amp;rsquo;un UUID. En gros ça correspond en Java à UUID.randomUUID().getMostSignificantBits().
SELECT -conv(substring_index(uuid(), &amp;#39;-&amp;#39;, 1), 16, 10) Ce qui donne un long !</description>
    </item>
    
    <item>
      <title>Utiliser DataPump en ligne de commande</title>
      <link>/serveurs/oracle/utiliser-datapump-en-ligne-de-commande.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/oracle/utiliser-datapump-en-ligne-de-commande.html</guid>
      <description>Depuis la 10g, il y a deux méthodes pour exporter/importer un schéma :
 Import / Export normaux (exp) DataPump (&amp;gt;=10g uniquement) (expdp) La méthode ~DataPump est plus rapide et plus souple. Préférez donc celle là !  DataPump c:\&amp;gt; expdp system/manager directory=DATA_PUMP_DIR dumpfile=EDGE_SP3_FIX016_AXA.dmp schemas=edgec:\&amp;gt; impdp system/manager directory=DATA_PUMP_DIR dumpfile=EDGE_SP3_FIX016_AXA.dmp schemas=edge L&amp;rsquo;intérêt du ~DataPump est qu&amp;rsquo;il crée les schémas s&amp;rsquo;ils n&amp;rsquo;existent pas, qu&amp;rsquo;il permet de re-mapper les schémas et les tablespaces très facilement et qu&amp;rsquo;il va 3x plus vite que l&amp;rsquo;export normal.</description>
    </item>
    
    <item>
      <title>Web-server en une ligne de commande</title>
      <link>/linux/shell/web-server-en-une-ligne-de-commande.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/shell/web-server-en-une-ligne-de-commande.html</guid>
      <description> Comment lancer un serveur web en une ligne de commande bash :
while true; do { echo -e &amp;#39;HTTP/1.1 200 OK\r\n&amp;#39;; cat index.html; } | nc -l 8080; done L&amp;rsquo;intéret c&amp;rsquo;est que l&amp;rsquo;on peut voir facilement ce qui est envoyé comme entête HTTP, c&amp;rsquo;est simple et rapide !
liens  https://razvantudorica.com/08/web-server-in-one-line--bash/  </description>
    </item>
    
    <item>
      <title>[Error 1178] [SQLState HY000] The Teradata Database did not provide the expected response</title>
      <link>/serveurs/teradata/error-1178--sqlstate-hy000--the-teradata-database-did-not-provide-the-expected-response.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/serveurs/teradata/error-1178--sqlstate-hy000--the-teradata-database-did-not-provide-the-expected-response.html</guid>
      <description>Symptômes [Teradata JDBC Driver] [TeraJDBC 15.00.00.15] [Error 1178] [SQLState HY000] The Teradata Database did not provide the expected response - unable to read 8224 byte(s) from the database. Only 209814 byte(s) were received from the database and 202217 byte(s) have already been read.  Le problème se pose à l&amp;rsquo;exécution d&amp;rsquo;une requête bête :
select * from table_truc where the_date between ? and ? sachant que ça fonctionne très bien sur la plus-part des table mais pas sur l&amp;rsquo;une d&amp;rsquo;elles ?</description>
    </item>
    
  </channel>
</rss>
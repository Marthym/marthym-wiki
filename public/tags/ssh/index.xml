<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssh on wiki.ght1pc9kc.fr</title>
    <link>/tags/ssh.html</link>
    <description>Recent content in Ssh on wiki.ght1pc9kc.fr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    
	<atom:link href="/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Authentification SSH par certificat</title>
      <link>/linux/network/authentification-ssh-par-certificat.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/network/authentification-ssh-par-certificat.html</guid>
      <description>L&amp;rsquo;objectif est de pouvoir se connecté via SSH à un serveur sans fournir de mot de passe. Cela ne sera bien-sur possible de depuis une machine ayant la clé privé d&amp;rsquo;installé !
On commence par générer la paire de clés si c&amp;rsquo;est pas déjà fait :
ssh-keygen -t rsa -C &amp;#34;your_email@example.com&amp;#34; Laisser les clés se générer dans l&amp;rsquo;emplacement par défaut et laisser la passphrase vide sinon il faudra à chaque fois renseigner la passphrase.</description>
    </item>
    
    <item>
      <title>Download fichier via SSH avec reprise</title>
      <link>/linux/network/download-fichier-via-ssh-avec-reprise.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/network/download-fichier-via-ssh-avec-reprise.html</guid>
      <description>La plus part du temps on utilise SCP mais sur des fichiers de taille conséquente, il est pratique de pouvoir reprendre le téléchargement si la connexion a été rompue ou autres. RSync permet de faire ça.
rsync --partial --progress --rsh=ssh user@1.1.1.1:/home/user/database.tar.gz database.</description>
    </item>
    
    <item>
      <title>NFS au travers de SSH</title>
      <link>/linux/network/nfs-au-travers-de-ssh.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/network/nfs-au-travers-de-ssh.html</guid>
      <description>Faire passer du NFS au travers du SSH n&amp;rsquo;est pas si simple que ça. Il faut :
Pré-requis Vérifier que le server SSH autorise l&amp;rsquo;IP Forwarding
Configuration du client SSH Il faut faire une redirection de port. Pour ça, soit la ligne de commande :
ssh login@server-ssh -p 2222 -L 3049:server-nfs:2049 -L 3045:server-nfs:627 -N -f Le -N permet de ne pas proposer l&amp;rsquo;invite de commande, le -f lance le process SSH en background.</description>
    </item>
    
    <item>
      <title>SSH Vérification de la clé hôte échoué</title>
      <link>/linux/network/ssh--verification-de-la-cle-host-echoue.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/network/ssh--verification-de-la-cle-host-echoue.html</guid>
      <description>Symptome login@debian:~$ ssh server-ssh @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY! Someone could be eavesdropping on you right now (man-in-the-middle attack)! It is also possible that the RSA host key has just been changed. The fingerprint for the RSA key sent by the remote host is d7:16:94:8f:b9:e3:b0:16:3e:fc:e3:65:ba:d3:b4:1d. Please contact your system administrator. Add correct host key in /home/login/.</description>
    </item>
    
    <item>
      <title>SSH: Reprendre la main sur un session perdue</title>
      <link>/linux/network/ssh-reprendre-la-main-sur-un-session-perdue.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/network/ssh-reprendre-la-main-sur-un-session-perdue.html</guid>
      <description>Il arrive de perdre la main sur un session SSH pour différentes raisons. Dans ce cas il n&amp;rsquo;est plus possible de faire quoi que ce soir dans la console. Une manière simple de tuer la session sans tuer le terminal est de faire la suite de touche suivante :
ENTER , &#39;~&#39; , &#39;.&#39;</description>
    </item>
    
    <item>
      <title>ssh, control de tunnel via socket</title>
      <link>/linux/network/ssh-control-de-tunnel-via-socket.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/linux/network/ssh-control-de-tunnel-via-socket.html</guid>
      <description>Il est possible de commander une session SSH via un socket.
ssh -M -S my-ctrl-socket -fnNT -L 50000:localhost:3306 jm@sampledomain.com ssh -S my-ctrl-socket -O check jm@sampledomain.com Master running (pid=3517) ssh -S my-ctrl-socket -O exit jm@sampledomain.com Exit request sent. </description>
    </item>
    
  </channel>
</rss>